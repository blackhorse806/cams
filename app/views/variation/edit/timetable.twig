{% extends "layouts/master.twig" %}

{% block js %}
<script>
	var g_data = null;
	var g_lock = false;
	var g_has_changed = false;

	window.onbeforeunload = function(event) {
		if (g_has_changed)
	    	return "You have unsaved changes. Are you sure you want to navigate away?";
	};

	$(document).ready(function(){
		pull_data();
	});

	function pull_data() {
		$.ajax({
			url: '{{ urlFor('/variation/get/timetable', { "variation_id" : variation_id }) }}',
			method: "GET",
			dataType: "text",
			success: function(result) {
				if (result != null && result != "0 results") {
					g_data = JSON.parse(result);
					populate_form(format_data_for_form(g_data));
					console.log(g_data);
				}
			}
		});
	}

	function format_data_for_form(data) {
		var result = {
			"id": data.id,
			"d14": {
		        "variation_changes": data.variation_changes,
		        "variation_rationale": data.variation_rationale,
		        "variation_impact": data.variation_impact
		    },
		    "d15": {
		        "implementation_session": data.implementation_session,
		        "implementation_year": data.implementation_year
		    },
			"a": data.offerings,
			"c": data.timetabling
		};
		return result;
	}

	function populate_form(data) {
		$("#form1").html("");
		$("#form1").alpaca({
			"data": data,
			"schema": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string",
						"title": "ID"
					},
					"d14": {
						"title": "D1.4 Variation",
						"type": "object",
						"properties": {
							"variation_changes": {
								"type": "string",
								"title": "a. Please describe all of the changes to the Unit",
							},
							"variation_rationale": {
								"type": "string",
								"title": "b. Rationale for a variation to a Unit"
							},
							"variation_impact": {
								"type": "string",
								"title": "c. Impact of not making the change(s)"
							}
						}
					},
					"d15": {
						"title": "D1.5 Session for implementation",
						"type": "object",
						"properties": {
							"implementation_session": {
								"type": "string",
								"title": "Session",
								"enum": {{ sessions|json_encode|raw }}

							},
							"implementation_year": {
								"type": "string",
								"title": "Year",
								"enum": {{ years|json_encode|raw }}
							}
						}
					},
					"a": {
						"title": "D3.2 - a. Unit session, location and class (unit offering options) ",
						"type": "array",
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"type": "string",
									"title": "ID"
								},
								"session": {
									"type": "string",
									"title": "Session",
									"enum": {{ sessions|json_encode|raw }},
									"readonly": true
								},
								"location": {
									"type": "string",
									"title": "<a data-toggle='modal' data-target='#location_modal'>Location <span class='glyphicon glyphicon-info-sign' aria-hidden='true'></span></a>",
									"enum": {{ locations|json_encode|raw }},
									"readonly": true
								},
								"unit_class": {
									"type": "string",
									"title": "<a data-toggle='modal' data-target='#class_modal'>Unit Class <span class='glyphicon glyphicon-info-sign' aria-hidden='true'></span></a>"
								},
								"est_num_students": {
									"type": "number",
									"title": "<a data-toggle='modal' data-target='#est_modal'>Estimated Number of Students <span class='glyphicon glyphicon-info-sign' aria-hidden='true'></span></a>"
								},
								"quota": {
									"type": "number",
									"title": "<a data-toggle='modal' data-target='#quota_modal'>Quota <span class='glyphicon glyphicon-info-sign' aria-hidden='true'></span></a>"
								}
							}
						}
					},
					"c": {
						"title": "D3.2 - c. Timetabling requirements - attendance hours and type of space required",
						"type": "array",
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"type": "string",
									"title": "ID"
								},
								"session": {
									"type": "string",
									"title": "Session",
									"enum": {{ sessions|json_encode|raw }},
									"readonly": true
								},
								"location": {
									"type": "string",
									"title": "Location",
									"enum": {{ locations|json_encode|raw }},
									"readonly": true
								},
								"activity_type": {
									"type": "string",
									"title": "Type of Activity",
									"enum": {{ activity_type|json_encode|raw }}
								},
								"space_type": {
									"type": "string",
									"title": "Type of Space Required"
								},
								"activity_hours": {
									"type": "number",
									"title": "Hours per Activity"
								},
								"total_session_hours": {
									"type": "number",
									"title": "Total Hours per Session"
								},
								"activity_size": {
									"type": "number",
									"title": "Activity Size"
								}
							}
						}
					}
				}
			},
			"toolbarSticky": true,
			"options": {
				"events": {
                    "change": function() {
						g_has_changed = true;
                        console.log("Change");
                    }
				},
				"fields": {
					"id": {
						"type": "hidden"
					},
					"d14": {
						"helpers": [
							"The information provided here should assist the relevant committees in their decision to support the changes. Provide the reasons for the changes you are making and include any pertinent information regarding the impact of not making the changes you are requesting."
						],
						"fields": {
							"variation_changes": {
								"type": "textarea",
								"helpers": [
									"All changes must be listed here, so that they can be included in the approval process",
									"Note: Please note that any changes made but not listed here will not be considered approved and will therefore not be implemented."
								]
							},
							"variation_rationale": {
								"type": "textarea",
								"helpers": [
									"Please provide the reasons for the change(s)."
								]
							},
							"variation_impact": {
								"type": "textarea",
								"helpers": [
									"Please explain the impact of NOT making the change(s)"
								]
							},
						},
                        "dependencies": {
                            "proposal_type": "Variation"
                        }
					},
					"d15": {
						"helpers": [
							"Please indicate when the proposed Unit will first be offered, or when the variation will take effect."
						]
					},
					"a": {
						"helpers": [
							"Please indicate the session(s) and campus(es) where the Unit will be taught and an estimate of the student numbers for each offering.  If applicable please provide the quota that should be applied to restrict enrolments for the first offering."
						],
						"type": "table",
						"items": {
							"fields": {
								"id": {
									"type": "hidden"
								},
								"unit_code": {
									"size": 1
								}
							}
						},
						"actionbar": {
							 "actions": [{
								 "enabled": false,
								 "action": "add",
								 "click": function() {
									var value = this.getValue();
									value.push({
									});
									this.setValue(value);
								}
							 }, {
								 "action": "remove",
								 "enabled": false
							 }, {
								 "action": "up",
								 "enabled": false
							 }, {
								 "action": "down",
								 "enabled": false
							 }]
						}
					},
					"c": {
						"helpers": [
							"Please give details for each class type; for example, the different timetabling requirements for Summer (if the unit is delivered in a different way; for example with intensive classes).",
							"Details: Breakdown of the hours allocated per week to each type of delivery, estimated size of cohort for each delivery type, details of the type of space required including any specific on-campus teaching facilities that are required. ",
							"Note: Details must also be provided to the Course Data Management team in the annual data collection period."
						],
						"type": "table",
						"items": {
							"fields": {
								"id": {
									"type": "hidden"
								},
								"course_code": {
									"size": 4
								},
								"threshold": {
		                    		"type": "select",
		                    		"optionLabels": ["No", "Yes"]
		                		}
							}
						},
						"actionbar": {
							 "actions": [{
								 "enabled": false,
								 "action": "add",
								 "click": function() {
									var value = this.getValue();
									value.push({
									});
									this.setValue(value);
								}
							 }, {
								 "action": "remove",
								 "enabled": false
							 }, {
								 "action": "up",
								 "enabled": false
							 }, {
								 "action": "down",
								 "enabled": false
							 }]
						}
					}
				},
				"form": {
				   "buttons": {
					   "submit": {
						   "title": "Save",
						   "click": save
					   }
				   }
			   }
		   },
			"postRender": function(control) {
				$('[data-key="submit"]').addClass("btn-primary");
				$('[data-alpaca-container-item-name="d34"]').addClass("alpaca-field-object");
				$('[data-alpaca-container-item-name="a"]').addClass("alpaca-field-object");
				$('[data-alpaca-container-item-name="c"]').addClass("alpaca-field-object");
				// for (var i = 0; i < 100; i++) {
					// $('[name="_' + i + '_number"]').width(17);
					// $('[data-alpaca-container-item-name="_' + i + '_weight"]').width(50);
					// $('[data-alpaca-container-item-name="_' + i + '_ulos"]').width(100);
					// $('[data-alpaca-container-item-name="_' + i + '_threshold"]').width(80);
					// $('[data-alpaca-container-item-name="_' + i + '_type"]').width(105);
				// }
				$(".actionbar").width(0);
			}
		});
	}

	function find_deleted(loaded, modified) {
		var deleted = [];
		if (loaded != null) {
			for (var i = 0; i < loaded.length; i++) {
				var find_id = loaded[i].id
				var found = false;
				for (var j = 0; j < modified.length; j++) {
					if (modified[j].id == find_id) {
						found = true;
						break;
					}
				}
				if (!found) {
					deleted.push(find_id);
				}
			}
		}
		return deleted;
	}

	function save() {
		if (g_lock){
			return;
		}
		g_lock = true;
		$(".alpaca-form-button-submit").addClass("disabled");
		$(".alpaca-form-button-submit").html("Saving...");

		var data = $("#form1").alpaca().getValue();
		console.log(JSON.stringify(data));

		var deleted = {};
		deleted.offerings = find_deleted(g_data.offerings, data.a);
		deleted.timetabling = find_deleted(g_data.timetabling, data.c);

		g_data.id = data.id;
		g_data.variation_changes = data.d14.variation_changes;
		g_data.variation_rationale = data.d14.variation_rationale;
		g_data.variation_impact = data.d14.variation_impact;
		g_data.implementation_session = data.d15.implementation_session,
		g_data.implementation_year = data.d15.implementation_year
		g_data.offerings = data.a;
		g_data.timetabling = data.c;


		// Replace undefined values with empty string
		for (var variable in g_data) {
			if (g_data.hasOwnProperty(variable)) {
				if (typeof g_data[variable] === 'undefined') {
					g_data[variable] = "";
				}
			}
		}

		console.log(g_data);

		console.log(deleted);

		$.ajax({
			url: '{{ urlFor('/variation/put/timetable', { "variation_id" : variation_id }) }}',
			dataType: 'text',
			data: {data : JSON.stringify(g_data), delete : JSON.stringify(deleted)},
			type: 'POST',
			success: function(data){
				console.log(data);
				if (data=="success") {
					//$('html, body').animate({scrollTop: $("body").offset().top},200);
					$('#submitted').hide();
					$('#submitted').fadeIn(1000);
					setTimeout(function() {
						$('#submitted').fadeOut(2000);
					}, 2000);
					pull_data();
					g_has_changed = false;
				} else {
					alert("Error: Could not save.\nMessage: " + data);
				}
				$(".alpaca-form-button-submit").removeClass("disabled");
				$(".alpaca-form-button-submit").html("Save");
				g_lock = false;
			}
		});
	}
</script>
{% endblock %}

{% block css %}
<style media="screen">
	#submitted {
		position: fixed;
		top: 75px;
		right: 50px;
		width: 200px;
	}

	.class_table, .class_table td, .class_table th {
		border: 1px solid black
	}

	.class_table th:first-child {
		width: 120px;
	}

	.class_table td, .class_table th {
		padding: 5px;
	}


</style>
{% endblock %}

{% block content %}

<h1>Timetable Variation</h1>
<div style="text-align: left;">
<br>
<div id='submitted' hidden><div class="alert alert-success" role="alert">Data Saved <span class="glyphicon glyphicon-ok" aria-hidden="true"></span></div></div>

<div id="form1"></div>

{% endblock %}
